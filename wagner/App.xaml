<Application x:Class="Wagner.App"
			 xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
			 xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
			 xmlns:local="clr-namespace:Wagner"
			 StartupUri="MainWindow.xaml">
	<Application.Resources>
		<SolidColorBrush x:Key="brush_form" Color="#272520"/>
		<SolidColorBrush x:Key="brush_dark1" Color="#1c1b17"/>
		<SolidColorBrush x:Key="brush_dark2" Color="#0e0d0b"/>
		<SolidColorBrush x:Key="brush_light1" Color="#302e27"/>
		<SolidColorBrush x:Key="brush_light2" Color="#38352e"/>
		<SolidColorBrush x:Key="brush_light3" Color="#464339"/>
		<SolidColorBrush x:Key="brush_light3.5" Color="#625e50"/>
		<SolidColorBrush x:Key="brush_light4" Color="#a39d8f"/>
		<SolidColorBrush x:Key="brush_light5" Color="#e8e7e3"/>

		<!-- window -->
		<Style x:Key="style_window" TargetType="Window">
			<Setter Property="WindowStyle" Value="None"/>
			<Setter Property="AllowsTransparency" Value="True"/>
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="Window">
						<Border Name="Border" Background="{StaticResource brush_form}" BorderBrush="{StaticResource brush_light3}" BorderThickness="1">
							<Grid>
								<ContentPresenter/>
								<ResizeGrip
									Name="ResizeGrip"
									HorizontalAlignment="Right"
									VerticalAlignment="Bottom"
									Visibility="Collapsed"/>
							</Grid>
						</Border>
						<ControlTemplate.Triggers>
							<Trigger Property="Visibility" Value="Visible">
								<Trigger.EnterActions>
									<BeginStoryboard>
										<Storyboard>
											<DoubleAnimation
											Duration="0:0:0"
											From="0"
											To="1"
											Storyboard.TargetName="Border"
											Storyboard.TargetProperty="Opacity"/>
										</Storyboard>
									</BeginStoryboard>
								</Trigger.EnterActions>
								<Trigger.ExitActions>
									<BeginStoryboard>
										<Storyboard>
											<DoubleAnimation
											Duration="0:0:0"
											From="1"
											To="0"
											Storyboard.TargetName="Border"
											Storyboard.TargetProperty="Opacity"/>
										</Storyboard>
									</BeginStoryboard>
								</Trigger.ExitActions>
							</Trigger>
							<Trigger Property="ResizeMode" Value="CanResizeWithGrip">
								<Setter TargetName="ResizeGrip" Property="Visibility" Value="Visible"/>
							</Trigger>
						</ControlTemplate.Triggers>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>

		<!-- label -->
		<Style TargetType="Label">
			<Setter Property="Foreground" Value="{StaticResource brush_light4}" />
			<Setter Property="Margin" Value="10, 0, 10, 0"/>
		</Style>
		
		<!-- window title label -->
		<Style x:Key="style_title_label" TargetType="Label">
			<Setter Property="Foreground" Value="{StaticResource brush_light4}" />
			<Setter Property="FontFamily" Value="Helvetica" />
			<Setter Property="Margin" Value="10, 0, 10, 0"/>
			<Setter Property="FontSize" Value="14"/>
			<Setter Property="VerticalAlignment" Value="Center"/>
		</Style>

		<!-- canvas -->
		<Style TargetType="Canvas">
			<Setter Property="Background" Value="{StaticResource brush_dark1}"/>
		</Style>
		
		<!-- textbox -->
		<Style TargetType="TextBox">
			<Setter Property="Foreground" Value="{StaticResource brush_light4}"/>
			<Setter Property="VerticalAlignment" Value="Center"/>
			<Setter Property="Padding" Value="0,3,0,5"/>
			<Setter Property="SnapsToDevicePixels" Value="true"/>
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="{x:Type TextBoxBase}">
						<Border Name="border" BorderThickness="1" BorderBrush="{StaticResource brush_light3}" TextBlock.Foreground="{StaticResource brush_light5}">
							<VisualStateManager.VisualStateGroups>
								<VisualStateGroup x:Name="CommonStates">
									<VisualState x:Name="Normal"/>
									<VisualState x:Name="Disabled"/>
									<VisualState x:Name="ReadOnly"/>
									<VisualState x:Name="MouseOver">
										<Storyboard>
											<ColorAnimation
												From="#00a39d8f"
												To="#ff625e50"
												Duration="0:0:0"
												Storyboard.TargetName="border"
												Storyboard.TargetProperty="(Border.BorderBrush).(SolidColorBrush.Color)"/>
										</Storyboard>
									</VisualState>
									<VisualState x:Name="Focused">
										<Storyboard>
											<ColorAnimation
												From="#00a39d8f"
												To="#ffa39d8f"
												Duration="0:0:0"
												Storyboard.TargetName="border"
												Storyboard.TargetProperty="(Border.BorderBrush).(SolidColorBrush.Color)"/>
										</Storyboard>
									</VisualState>
								</VisualStateGroup>
							</VisualStateManager.VisualStateGroups>
							<ScrollViewer Margin="0" x:Name="PART_ContentHost" />
						</Border>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>
		
		<!-- radio button -->
		<Style TargetType="RadioButton">
			<Setter Property="VerticalAlignment" Value="Center"/>
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="{x:Type RadioButton}">
						<BulletDecorator Margin="10,6,10,6" Background="Transparent">
							<BulletDecorator.Bullet>
								<Grid Width="18" Height="18">
									<Ellipse Name="border" StrokeThickness="1" Stroke="{StaticResource brush_light3}"/>
									<Ellipse Name="checkMark" Margin="5" Fill="#00000000"/>
								</Grid>
							</BulletDecorator.Bullet>
							<VisualStateManager.VisualStateGroups>
								<VisualStateGroup x:Name="CommonStates">
									<VisualState x:Name="Normal" />
									<VisualState x:Name="MouseOver">
										<Storyboard>
											<ColorAnimation
												From="#00a39d8f"
												To="#ff625e50"
												Duration="0:0:0"
												Storyboard.TargetName="border"
												Storyboard.TargetProperty="(Shape.Stroke).(SolidColorBrush.Color)"/>
										</Storyboard>
									</VisualState>
									<VisualState x:Name="Pressed">
										<Storyboard>
											
										</Storyboard>
									</VisualState>
									<VisualState x:Name="Disabled">
										<Storyboard>
											<ColorAnimation
												From="#000000"
												To="#625e50"
												Duration="0:0:0"
												Storyboard.TargetName="text"
												Storyboard.TargetProperty="(TextBlock.Foreground).(SolidColorBrush.Color)"/>
										</Storyboard>
									</VisualState>
								</VisualStateGroup>
								<VisualStateGroup x:Name="CheckStates">
									<VisualState x:Name="Checked">
										<Storyboard>
											<ColorAnimation
												From="#00000000"
												To="#ffa39d8f"
												Duration="0:0:0"
												Storyboard.TargetName="checkMark"
												Storyboard.TargetProperty="(Shape.Fill).(SolidColorBrush.Color)"/>
										</Storyboard>
									</VisualState>
									<VisualState x:Name="Unchecked" />
									<VisualState x:Name="Indeterminate" />
								</VisualStateGroup>
							</VisualStateManager.VisualStateGroups>
							<ContentPresenter Margin="8,0,0,0"
											  Name="text"
											  TextBlock.Foreground="{StaticResource brush_light4}"
											  VerticalAlignment="Center"
											  HorizontalAlignment="Left"
											  RecognizesAccessKey="True" />
						</BulletDecorator>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>
		
		<!-- checkbox -->
		<Style TargetType="CheckBox">
			<Setter Property="VerticalAlignment" Value="Center"/>
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="{x:Type CheckBox}">
						<BulletDecorator Margin="10,6,10,6" Background="Transparent">
							<BulletDecorator.Bullet>
								<Border Name="border" Width="18" Height="18" BorderThickness="1" BorderBrush="{StaticResource brush_light3}">
									<Border Name="checkMark" Margin="4" Background="Transparent"/>
								</Border>
							</BulletDecorator.Bullet>
							<VisualStateManager.VisualStateGroups>
								<VisualStateGroup x:Name="CommonStates">
									<VisualState x:Name="Normal" />
									<VisualState x:Name="MouseOver">
										<Storyboard>
											<ColorAnimation
												From="#00a39d8f"
												To="#ff625e50"
												Duration="0:0:0"
												Storyboard.TargetName="border"
												Storyboard.TargetProperty="(Border.BorderBrush).(SolidColorBrush.Color)"/>
										</Storyboard>
									</VisualState>
									<VisualState x:Name="Pressed">
										<Storyboard>

										</Storyboard>
									</VisualState>
									<VisualState x:Name="Disabled"/>
								</VisualStateGroup>
								<VisualStateGroup x:Name="CheckStates">
									<VisualState x:Name="Checked">
										<Storyboard>
											<ColorAnimation
												From="#00000000"
												To="#ffa39d8f"
												Duration="0:0:0"
												Storyboard.TargetName="checkMark"
												Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)"/>
										</Storyboard>
									</VisualState>
									<VisualState x:Name="Unchecked" />
									<VisualState x:Name="Indeterminate" />
								</VisualStateGroup>
							</VisualStateManager.VisualStateGroups>
							<ContentPresenter Margin="8,0,0,0"
											  Name="text"
											  TextBlock.Foreground="{StaticResource brush_light4}"
											  VerticalAlignment="Center"
											  HorizontalAlignment="Left"
											  RecognizesAccessKey="True" />
						</BulletDecorator>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>

		<!-- buttons -->
		<Style TargetType="Button">
			<Setter Property="Template" Value="{DynamicResource template_button}"/>
			<Setter Property="Background" Value="{StaticResource brush_light2}"/>
			<Setter Property="Padding" Value="12,5,12,5"/>
		</Style>
		<Style x:Key="style_button_window_control" TargetType="Button">
			<Setter Property="Template" Value="{DynamicResource template_button}"/>
			<Setter Property="Background" Value="{StaticResource brush_light2}"/>
			<Setter Property="Padding" Value="12,1,12,5"/>
			<Setter Property="Width" Value="48"/>
			<Setter Property="FontSize" Value="24"/>
		</Style>
		<Style x:Key="style_button_window_control_blank" TargetType="Button">
			<Setter Property="Template" Value="{DynamicResource template_button}"/>
			<Setter Property="Background" Value="{StaticResource brush_form}"/>
			<Setter Property="Padding" Value="12,1,12,5"/>
			<Setter Property="Width" Value="48"/>
			<Setter Property="FontSize" Value="24"/>
		</Style>
		<ControlTemplate x:Key="template_button" TargetType="Button">
			<Border
				HorizontalAlignment="Center"
				VerticalAlignment="Center"
				SnapsToDevicePixels="True"
				Width="{TemplateBinding Width}"
				Height="{TemplateBinding Height}"
				x:Name="Border"
				Background="{TemplateBinding Background}"
				Padding="{TemplateBinding Padding}">
				<VisualStateManager.VisualStateGroups>
					<VisualStateGroup x:Name="CommonStates">
						<VisualStateGroup.Transitions>
							<VisualTransition GeneratedDuration="0:0:0.1" />
							<VisualTransition GeneratedDuration="0" To="Pressed" />
						</VisualStateGroup.Transitions>
						<VisualState x:Name="Normal" />
						<VisualState x:Name="MouseOver">
							<Storyboard>
								<ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Panel.Background).(SolidColorBrush.Color)"
                                                Storyboard.TargetName="Border">
									<EasingColorKeyFrame KeyTime="0" Value="#464339" />
								</ColorAnimationUsingKeyFrames>
							</Storyboard>
						</VisualState>
						<VisualState x:Name="Pressed"/>
						<VisualState x:Name="Disabled">
							<Storyboard>
								<ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(TextBlock.Foreground).(SolidColorBrush.Color)"
                                                Storyboard.TargetName="text">
									<EasingColorKeyFrame KeyTime="0" Value="#625e50" />
								</ColorAnimationUsingKeyFrames>
							</Storyboard>
						</VisualState>
					</VisualStateGroup>
				</VisualStateManager.VisualStateGroups>
				<TextBlock Name="text" Foreground="{StaticResource brush_light5}" VerticalAlignment="Center" HorizontalAlignment="Center" Text="{TemplateBinding Content}"/>
			</Border>
		</ControlTemplate>
		
		<!-- combobox (dropdown) -->
		<ControlTemplate x:Key="ComboBoxToggleButton" TargetType="ToggleButton">
			<Grid>
				<Grid.ColumnDefinitions>
					<ColumnDefinition />
					<ColumnDefinition Width="24" />
				</Grid.ColumnDefinitions>
				<VisualStateManager.VisualStateGroups>
					<VisualStateGroup x:Name="CommonStates">
						<VisualState x:Name="Normal" />
						<VisualState x:Name="MouseOver">
							<Storyboard>
								<ColorAnimation
									To="#625e50"
									Duration="0"
									Storyboard.TargetName="Border"
									Storyboard.TargetProperty="(Border.BorderBrush).(SolidColorBrush.Color)"/>
								<ColorAnimation
									To="#625e50"
									Duration="0"
									Storyboard.TargetName="Arrow"
									Storyboard.TargetProperty="(Path.Fill).(SolidColorBrush.Color)"/>
							</Storyboard>
						</VisualState>
						<VisualState x:Name="Pressed" />
						<VisualState x:Name="Disabled"/>
					</VisualStateGroup>
					<VisualStateGroup x:Name="CheckStates">
						<VisualState x:Name="Checked"/>
					</VisualStateGroup>
				</VisualStateManager.VisualStateGroups>
				<Border x:Name="Border" Grid.ColumnSpan="2" Background="Transparent" BorderThickness="1" BorderBrush="{StaticResource brush_light3}"/>
				<Border Grid.Column="0" Background="Transparent" />
				<Path x:Name="Arrow" Grid.Column="1" HorizontalAlignment="Center" VerticalAlignment="Center" Data="M 0 0 L 6 6 L 12 0 Z" Fill="{StaticResource brush_light3}"/>
			</Grid>
		</ControlTemplate>

		<ControlTemplate x:Key="ComboBoxTextBox" TargetType="TextBox">
			<Border x:Name="PART_ContentHost" Focusable="False" Background="{TemplateBinding Background}" />
		</ControlTemplate>

		<Style TargetType="ComboBox">
			<Setter Property="SnapsToDevicePixels" Value="true" />
			<Setter Property="OverridesDefaultStyle" Value="true" />
			<Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto" />
			<Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto" />
			<Setter Property="ScrollViewer.CanContentScroll" Value="true" />
			<Setter Property="MinWidth" Value="80" />
			<Setter Property="MinHeight" Value="20" />
			<Setter Property="Foreground" Value="{StaticResource brush_light4}"/>
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="ComboBox">
						<Grid>
							<VisualStateManager.VisualStateGroups>
								<VisualStateGroup x:Name="CommonStates">
									<VisualState x:Name="Normal" />
									<VisualState x:Name="MouseOver" />
									<VisualState x:Name="Disabled"/>
								</VisualStateGroup>
							</VisualStateManager.VisualStateGroups>
							<ToggleButton Name="ToggleButton"
										  Template="{StaticResource ComboBoxToggleButton}"
										  Grid.Column="2"
										  Focusable="false"
										  ClickMode="Press"
										  IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"/>
							<ContentPresenter Name="ContentSite"
											  IsHitTestVisible="False"
											  Content="{TemplateBinding SelectionBoxItem}"
											  Margin="8,3,24,5"
											  VerticalAlignment="Stretch"
											  HorizontalAlignment="Left">
							</ContentPresenter>
							<TextBox Name="PART_EditableTextBox"
									 Style="{x:Null}"
									 Template="{StaticResource ComboBoxTextBox}"
									 HorizontalAlignment="Left"
									 VerticalAlignment="Bottom"
									 Margin="3,3,23,3"
									 Focusable="True"
									 Background="Transparent"
									 Visibility="Hidden"
									 IsReadOnly="{TemplateBinding IsReadOnly}" />
							<Popup Name="Popup"
								   Placement="Bottom"
								   IsOpen="{TemplateBinding IsDropDownOpen}"
								   AllowsTransparency="True"
								   Focusable="False"
								   PopupAnimation="Slide">
								<Grid x:Name="DropDown"
									  SnapsToDevicePixels="True"
									  MinWidth="{TemplateBinding ActualWidth}"
									  MaxHeight="{TemplateBinding MaxDropDownHeight}">
									<Border x:Name="DropDownBorder" BorderThickness="1" BorderBrush="{StaticResource brush_light3}" Background="{StaticResource brush_light1}"/>
									<ScrollViewer Margin="1,0,1,0" SnapsToDevicePixels="True">
										<StackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Contained" />
									</ScrollViewer>
								</Grid>
							</Popup>
						</Grid>
						<ControlTemplate.Triggers>
							<Trigger Property="HasItems" Value="false">
								<Setter TargetName="DropDownBorder" Property="MinHeight" Value="95" />
							</Trigger>
							<Trigger SourceName="Popup" Property="AllowsTransparency" Value="true">
								<Setter TargetName="DropDownBorder" Property="Margin" Value="0,0,0,0" />
							</Trigger>
						</ControlTemplate.Triggers>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>

		<Style TargetType="ComboBoxItem">
			<Setter Property="SnapsToDevicePixels" Value="true" />
			<Setter Property="OverridesDefaultStyle" Value="true" />
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="ComboBoxItem">
						<Border Name="Border"
								Padding="6"
								SnapsToDevicePixels="true"
								Background="Transparent">
							<VisualStateManager.VisualStateGroups>
								<VisualStateGroup x:Name="CommonStates">
									<VisualState x:Name="Normal">

									</VisualState>
									<VisualState x:Name="MouseOver">
										<Storyboard>
											<ColorAnimation
												To="#38352e"
												Duration="0:0:0"
												Storyboard.TargetName="Border"
												Storyboard.TargetProperty="(Panel.Background).(SolidColorBrush.Color)"/>
										</Storyboard>
									</VisualState>
								</VisualStateGroup>
							</VisualStateManager.VisualStateGroups>
							<ContentPresenter />
						</Border>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>

		<!-- settings open/close tab -->
		<Style x:Key="style_open_close_tab" TargetType="Grid">
			<Setter Property="Width" Value="24"/>
			<Setter Property="Height" Value="48"/>
			<Setter Property="Background" Value="{StaticResource brush_form}"/>
			<Setter Property="VerticalAlignment" Value="Top"/>
			<Setter Property="HorizontalAlignment" Value="Left"/>
			<Style.Triggers>
				<Trigger Property="IsMouseOver" Value="True">
					<Setter Property="Background" Value="{StaticResource brush_light3}"/>
				</Trigger>
			</Style.Triggers>
		</Style>

		<!-- close arrow -->
		<Style x:Key="style_close_arrow" TargetType="Path">
			<Setter Property="Fill" Value="{StaticResource brush_light4}"/>
			<Setter Property="Data">
				<Setter.Value>
					<PathGeometry>
						<PathGeometry.Figures>
							<PathFigureCollection>
								<PathFigure IsClosed="True" StartPoint="8,24">
									<PathFigure.Segments>
										<PathSegmentCollection>
											<LineSegment Point="16,16" />
											<LineSegment Point="16,32" />
										</PathSegmentCollection>
									</PathFigure.Segments>
								</PathFigure>
							</PathFigureCollection>
						</PathGeometry.Figures>
					</PathGeometry>
				</Setter.Value>
			</Setter>
		</Style>

		<!-- open arrow -->
		<Style x:Key="style_open_arrow" TargetType="Path">
			<Setter Property="Fill" Value="{StaticResource brush_light4}"/>
			<Setter Property="Data">
				<Setter.Value>
					<PathGeometry>
						<PathGeometry.Figures>
							<PathFigureCollection>
								<PathFigure IsClosed="True" StartPoint="16,24">
									<PathFigure.Segments>
										<PathSegmentCollection>
											<LineSegment Point="8,16" />
											<LineSegment Point="8,32" />
										</PathSegmentCollection>
									</PathFigure.Segments>
								</PathFigure>
							</PathFigureCollection>
						</PathGeometry.Figures>
					</PathGeometry>
				</Setter.Value>
			</Setter>
		</Style>
		
		<!-- anchor arrows -->
		<Style x:Key="style_anchor_arrow_ul" TargetType="Path">
			<Setter Property="Fill" Value="{StaticResource brush_light2}"/>
			<Setter Property="Data">
				<Setter.Value>
					<PathGeometry>
						<PathGeometry.Figures>
							<PathFigureCollection>
								<PathFigure IsClosed="True" StartPoint="0,0">
									<PathFigure.Segments>
										<PathSegmentCollection>
											<LineSegment Point="0,16" />
											<LineSegment Point="16,0" />
										</PathSegmentCollection>
									</PathFigure.Segments>
								</PathFigure>
							</PathFigureCollection>
						</PathGeometry.Figures>
					</PathGeometry>
				</Setter.Value>
			</Setter>
		</Style>
		<Style x:Key="style_anchor_arrow_ur" TargetType="Path">
			<Setter Property="Fill" Value="{StaticResource brush_light2}"/>
			<Setter Property="Data">
				<Setter.Value>
					<PathGeometry>
						<PathGeometry.Figures>
							<PathFigureCollection>
								<PathFigure IsClosed="True" StartPoint="36,0">
									<PathFigure.Segments>
										<PathSegmentCollection>
											<LineSegment Point="36,16" />
											<LineSegment Point="20,0" />
										</PathSegmentCollection>
									</PathFigure.Segments>
								</PathFigure>
							</PathFigureCollection>
						</PathGeometry.Figures>
					</PathGeometry>
				</Setter.Value>
			</Setter>
		</Style>
		<Style x:Key="style_anchor_arrow_dl" TargetType="Path">
			<Setter Property="Fill" Value="{StaticResource brush_light2}"/>
			<Setter Property="Data">
				<Setter.Value>
					<PathGeometry>
						<PathGeometry.Figures>
							<PathFigureCollection>
								<PathFigure IsClosed="True" StartPoint="0,36">
									<PathFigure.Segments>
										<PathSegmentCollection>
											<LineSegment Point="16,36" />
											<LineSegment Point="0,20" />
										</PathSegmentCollection>
									</PathFigure.Segments>
								</PathFigure>
							</PathFigureCollection>
						</PathGeometry.Figures>
					</PathGeometry>
				</Setter.Value>
			</Setter>
		</Style>
		<Style x:Key="style_anchor_arrow_dr" TargetType="Path">
			<Setter Property="Fill" Value="{StaticResource brush_light2}"/>
			<Setter Property="Data">
				<Setter.Value>
					<PathGeometry>
						<PathGeometry.Figures>
							<PathFigureCollection>
								<PathFigure IsClosed="True" StartPoint="36,36">
									<PathFigure.Segments>
										<PathSegmentCollection>
											<LineSegment Point="36,20" />
											<LineSegment Point="20,36" />
										</PathSegmentCollection>
									</PathFigure.Segments>
								</PathFigure>
							</PathFigureCollection>
						</PathGeometry.Figures>
					</PathGeometry>
				</Setter.Value>
			</Setter>
		</Style>
		
		<!-- menu -->
		<Style TargetType="Menu">
			<Setter Property="OverridesDefaultStyle" Value="True" />
			<Setter Property="SnapsToDevicePixels" Value="True" />
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="Menu">
						<Border Background="{StaticResource brush_light1}">
							<StackPanel ClipToBounds="True"
										Orientation="Horizontal"
										IsItemsHost="True" />
						</Border>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>

		<!-- TopLevelHeader -->
		<ControlTemplate x:Key="{x:Static MenuItem.TopLevelHeaderTemplateKey}" TargetType="MenuItem">
			<Border x:Name="Border" Background="Transparent">
				<Grid>
					<ContentPresenter Margin="14,8,14,8"
									  ContentSource="Header"
									  RecognizesAccessKey="True" />
					<Popup x:Name="Popup"
						   Placement="Bottom"
						   IsOpen="{TemplateBinding IsSubmenuOpen}"
						   AllowsTransparency="True"
						   Focusable="False"
						   PopupAnimation="Fade">
						<Border Name="SubmenuBorder"
								SnapsToDevicePixels="True"
								Background="{StaticResource brush_light1}">
							<StackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Cycle" />
						</Border>
					</Popup>
				</Grid>
			</Border>
			<ControlTemplate.Triggers>
				<Trigger Property="IsSuspendingPopupAnimation" Value="true">
					<Setter TargetName="Popup" Property="PopupAnimation" Value="None" />
				</Trigger>
				<Trigger Property="IsHighlighted" Value="true">
					<Setter Property="Background" TargetName="Border" Value="{StaticResource brush_light2}"/>
				</Trigger>
				<Trigger SourceName="Popup" Property="AllowsTransparency" Value="True">
					<Setter TargetName="SubmenuBorder" Property="Margin" Value="0,0,4,4" />
					<Setter TargetName="SubmenuBorder" Property="Padding" Value="0,0,0,3" />
				</Trigger>
				<Trigger Property="IsEnabled" Value="False">
					<Setter Property="Foreground" Value="{StaticResource brush_light3}"/>
				</Trigger>
			</ControlTemplate.Triggers>
		</ControlTemplate>

		<!-- SubmenuItem -->
		<ControlTemplate x:Key="{x:Static MenuItem.SubmenuItemTemplateKey}" TargetType="MenuItem">
			<Border Name="Border" Background="Transparent">
				<Grid>
					<Grid.ColumnDefinitions>
						<ColumnDefinition Width="Auto" SharedSizeGroup="Checks"/>
						<ColumnDefinition MinWidth="128" Width="auto" SharedSizeGroup="Middle"/>
						<ColumnDefinition Width="auto" SharedSizeGroup="Shortcut"/>
					</Grid.ColumnDefinitions>
					<CheckBox Name="Check" Margin="0" Visibility="Collapsed"/>
					<ContentPresenter Name="Header"
									  Grid.Column="1"
									  Margin="16,0,0,0"
									  ContentSource="Header"
									  HorizontalAlignment="Left"
									  VerticalAlignment="Center"
									  RecognizesAccessKey="True" />
					<TextBlock Grid.Column="2"
							   Text="{TemplateBinding InputGestureText}"
							   Margin="8"/>
				</Grid>
			</Border>
			<ControlTemplate.Triggers>
				<Trigger Property="ButtonBase.Command" Value="{x:Null}" />
				<Trigger Property="IsChecked" Value="true">
					<Setter TargetName="Check" Property="IsChecked" Value="true"/>
				</Trigger>
				<Trigger Property="IsCheckable" Value="true">
					<Setter TargetName="Check" Property="Visibility" Value="Visible" />
					<Setter TargetName="Header" Property="Margin" Value="0"/>
				</Trigger>
				<Trigger Property="IsHighlighted" Value="true">
					<Setter Property="Background" TargetName="Border" Value="{StaticResource brush_light2}"/>
				</Trigger>
				<Trigger Property="IsEnabled" Value="false">
					<Setter Property="Foreground" Value="{StaticResource brush_light3}"/>
				</Trigger>
			</ControlTemplate.Triggers>
		</ControlTemplate>

		<!-- MenuItem Style -->
		<Style TargetType="MenuItem">
			<Setter Property="OverridesDefaultStyle" Value="True" />
			<Setter Property="Foreground" Value="{StaticResource brush_light4}"/>
			<Style.Triggers>
				<Trigger Property="Role" Value="TopLevelHeader">
					<Setter Property="Template" Value="{StaticResource {x:Static MenuItem.TopLevelHeaderTemplateKey}}" />
					<Setter Property="Grid.IsSharedSizeScope" Value="true" />
				</Trigger>
				<Trigger Property="Role" Value="SubmenuItem">
					<Setter Property="Template" Value="{StaticResource {x:Static MenuItem.SubmenuItemTemplateKey}}" />
				</Trigger>
			</Style.Triggers>
		</Style>
	</Application.Resources>
</Application>
